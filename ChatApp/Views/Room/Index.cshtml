@model ChatApp.Models.RoomViewModel

@if (Model.IsAuth)
{
	<div class="d-flex justify-content-center">
		<div class="col-md-10">
			<div>
				<h5>@Model.Chat.Name</h5>
			</div>

			<div class="my-3 border" id="messageTable">
				<table class="table table-borderless">
					<tbody id="chatTable">
						@foreach (var message in Model.Chat.Messages)
						{
							<tr>
								<th class="d-flex justify-content-between">
									<div class="col-3">@message.UserName</div>
									<div class="col-6 font-weight-light">@message.Text</div>
									<div class="col-3 font-weight-light">@message.Timestamp.ToString("yyyy/M/d H:m:s")</div>
								</th>
							</tr>
						}
					</tbody>
				</table>
			</div>

			<div class="d-flex">
				<input hidden readonly name="roomId" value="@Model.Chat.Id" id="roomId" />
				<input hidden readonly name="roomName" value="@Model.Chat.Name" id="roomName" />
				<input type="text" name="text" class="form-control" id="messageText" />
				<button type="button" class="btn btn-outline-primary" id="messageButton">Send</button>
			</div>
		</div>
	</div>
}

@section scripts
{
	<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>

	<script>
		let connection = new signalR.HubConnectionBuilder()
									.withUrl("/chatHub")
									.build();

		connection.on("ReceiveMessage", function(data) {
			renderMesssage(data);
		});

		connection.start()
				.then(function () {
					connection.invoke("joinroom", "@Model.Chat.Name");
				})
				.catch(function (err) {
					console.log(err);
				});

		window.addEventListener("onunload", function () {
			connection.invoke("leaveroom", "@Model.Chat.Name");
		})

		let messageButton = document.getElementById("messageButton");
		if (messageButton != null) {
			messageButton.addEventListener("click", function () {
				let roomId = document.getElementById("roomId").value;
				let roomName = document.getElementById("roomName").value;
				let messageInput = document.getElementById("messageText");
				let text = messageInput.value.toString().trim();

				if (text != null && text != ' ' && text != '' && text.lenght != 0) {
					messageInput.value = "";
					sendMessage(roomId, roomName, text);
				}
			});
		}

		function sendMessage(roomId, roomName, text) {
			let url = '/room/sendmessage';

			let body = {
				RoomId: roomId,
				RoomName: roomName,
				Text: text
			};

			try {
				fetch(url, {
					method: 'POST',
					body: JSON.stringify(body),
					headers: {
						'Accept': 'application/json',
						'Content-Type': 'application/json'
					},
				});
			} catch (error) {
				console.error(error);
			}
		}

		function renderMesssage(data) {
			let messageTable = document.getElementById("chatTable");

			let dateTime = formatDate(data.timestamp);

			let row = document.createElement("tr");
			row.innerHTML = '<th class="d-flex justify-content-between">' +
							`<div class="col-3">${data.userName}</div>` +
							`<div class="col-6 font-weight-light">${data.text}</div>` +
							`<div class="col-3 font-weight-light">${dateTime}</div></th>`;

			messageTable.appendChild(row);
		}

		function formatDate(data) {
			let date_ob = new Date(data);

			let date = ("0" + date_ob.getDate()).slice(-2);

			let month = ("0" + (date_ob.getMonth() + 1)).slice(-2);

			let year = date_ob.getFullYear();

			let hours = date_ob.getHours();

			let minutes = date_ob.getMinutes();

			let seconds = date_ob.getSeconds();

			return year + "/" + month + "/" + date + " " + hours + ":" + minutes + ":" + seconds;
		}

	</script>
}